trigger:
  batch: true
  branches:
    include:
    - main
    - master
    - develop
    - release/*
  paths:
    exclude:
    - README.md

parameters:
- name: image
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest
- name: buildPlatform
  displayName: 'buildPlatform'
  type: string
  default: 'x64'
  values:
  - 'x64'
  - 'ARM64'
- name: buildConfiguration
  displayName: 'buildConfiguration'
  type: string
  default: 'Release'
  values:
  - 'Debug'
  - 'Release'

jobs:
- job: build
  displayName: build
  pool: 
    vmImage: ${{ parameters.image }}
    demands: 
      - cmake
  steps:
  - script: echo building $(Build.BuildNumber) with ${{ parameters.image }}
  - script: echo %Action%%BuildVersion%
    displayName: 'Set build version'
    env:
      Action: '##vso[build.updatebuildnumber]'
      BuildVersion: $(GitVersion.MajorMinorPatch)
  - task: CMake@1
    displayName: 'Cmake ..'
    inputs:
      cmakeArgs: '..'
  - task: CMake@1
    displayName: 'Cmake --build . --config ${{ parameters.buildConfiguration }}'
    inputs:
      cmakeArgs: '--build . --config ${{ parameters.buildConfiguration }}'

# - task: PublishTestResults@2
#   displayName: 'Publish Release Test Results **/TEST-*.xml'
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/TestResults/basic_tests.xml'
#     mergeTestResults: true
#     buildPlatform: 'x64'
#     buildConfiguration: 'Release'
#   continueOnError: true

# - task: NuGetCommand@2
#   displayName: 'NuGet pack'
#   inputs:
#     command: 'pack'
#     packagesToPack: 'nuget/siddiqsoft.TimeThis.nuspec;!nuget/siddiqsoft.TimeThis.symbols.nuspec'
#     versioningScheme: 'off'
#     buildProperties: 'VERSION=$(build.buildNumber)'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

# - task: NuGetCommand@2
#   displayName: 'NuGet push'
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;build/*.nupkg;!build/*symbols.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'sqs-nuget'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
#   continueOnError: true

# - task: GitHubRelease@1
#   inputs:
#     gitHubConnection: 'github-packages-sqs'
#     repositoryName: 'SiddiqSoft/TimeThis'
#     action: 'create'
#     target: '$(Build.SourceVersion)'
#     tagSource: 'userSpecifiedTag'
#     tag: '$(build.buildNumber)'
#     title: 'v$(build.buildNumber)'
#     releaseNotesSource: 'inline'
#     isPreRelease: true
#     changeLogCompareToRelease: 'lastFullRelease'
#     changeLogType: 'commitBased'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    
